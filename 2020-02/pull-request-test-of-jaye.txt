基本命令
git add filename				添加文件到暂存区
git commit -m "说明信息"  			从暂存区提交文件至当前分支
git status					查看工作区当前状态
git reset --hard 版本号			        回到某个版本
git reset HEAD filename			        撤销暂存区的修改
git checkout -- filename			撤销工作区的修改	
git log        				        查看提交历史
git log --pretty=oneline			以一行形式查看提交历史
git reflog					查看命令历史以回到未来的某个版本
git diff					提交前查看修改
git remote add origin git@server-name:path/repo-name.git	关联一个远程库
git push -u origin master			第一次推送master分支的所有内容（后面推送不需-u参数）
git clone 地址					从远程库克隆到本地


有关分支
git checkout -b 分支名 = git branch 分支名(创建) + git checkout 分支名(切换)
git branch					查看当前分支(列出所有分支，当前分支标明*)
git merge 分支名					合并某分支到当前分支（快速合并，不能显示之前之分的任何记录）
git merge --no-ff -m "说明信息" 分支名		拒绝快速合并，保留分支的commit记录，并生成一个commit信息
git branch -d 分支名				删除分支
git branch -D 分支名				强制删除被合并的分支
git log --graph					查看分支合并图
git log --graph --pretty=oneline --abbrev-commit		简约显示分支合并图
git stash					储存工作现场
git stash list				        查看储存的工作现场
git stash apply 				恢复指定的工作现场（不删除stash内容）
git stash pop					恢复并删除stash内容


有关远程库
git remote					查看远程库信息
git remote -v					查看可以抓取和推送的origin
git push origin 分支名				推送修改
git pull					拉取最新版的库
git branch -b --set-upstream-to 分支名 origin/分支名	将本地分支与远程分支建立联系
git remote -v					查看远程库信息
git checkout -b 分支名 origin/分支名		在本地创建和远程分支对应的分支


标签相关
git tag <tagname>				新建标签，默认为HEAD,也可指定commit id
git tag -a <tagname> -m ""			指定标签信息
git tag						查看所有标签
git push origin <tagname>			推送一个本地标签
git push origin --tags				推送全部未推送的本地标签
git tag -d <tagname>				删除一个本地标签
git push origin :refs/tags/<tagname>		删除一个远程标签
git config --global alias.* 原命令		给原命令起别名



Thank you very much!

-- 2020-2-25 22:30

-- from hujinyang
